import java.util.Scanner;
import java.util.Date;
import java.util.concurrent.atomic.AtomicReference;

class Pets {
    private String color;  //颜色
    private int age;  //年龄
    private String sex; //性别
    private double inPrice;  //进货价格
    private double outPrice;  //销售价格
    private String kind;
    private String state;
    private double money;

    protected vaccine vaccine=new vaccine();
    public vaccine getVaccine() {
        return vaccine;
    }

    public void setVaccine(vaccine vaccine) {
        this.vaccine = vaccine;
    }


    @Override
    public String toString() {
        return "Pets{" +
                "color='" + color + '\'' +
                ", age=" + age +
                ", sex='" + sex + '\'' +
                ", inPrice=" + inPrice +
                ", outPrice=" + outPrice +
                ", vaccine=" + vaccine +
                ", state=" + state +
                '}';
    }

    public Pets(){
    }


    public String getSex() {
        return sex;
    }

    public void setSex(String sex) {
        this.sex = sex;
    }

    public String getColor() {
        return color;
    }

    public void setColor(String color) {
        this.color = color;
    }

    public int getAge() {
        if (age<0||age>30)
        {
            //throw new IOException();
            while (age<0||age>30)
            {
                System.out.println("请重新输入年龄(大于0小于30)");
                setAge(age);
                age=getAge();
            }
        }return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public double getInPrice() {
        return inPrice;
    }

    public void setInPrice(double inPrice) {
        this.inPrice = inPrice;
    }

    public double getOutPrice() {
        return outPrice;
    }

    public void setOutPrice(double outPrice) {
        this.outPrice = outPrice;
    }

    public String getKind() {
        return kind;
    }

    public void setKind(String kind) {
        this.kind = kind;
    }


    public String getState() {
        return state;
    }

    public void setState(String state) {
        this.state = state;
    }

    public double getMoney() {
        return money;
    }

    public void setMoney(double money) {
        this.money = money;
    }
}

class Cat extends Pets{



    public Cat(){

    }

}

class Dog extends Pets {



    public Dog(){

    }

}
class PetsStore {
    Scanner input = new Scanner(System.in);
    private String name;
    private Cat[] cats;
    private Dog[] dogs;
    private Pets[] pets;
    private vaccine[] vaccines;
    private Zhushe[] zhushes;

    private int dogFoot = 0; // 狗的当前长度
    private int catFoot = 0; //猫的当前长度
    private int petFoot = 0;
    private int vaccineFoot = 0;
    private int zhusheFoot = 0;

    private int num = 0;  //库存数量
    private int inNum = 0;  //进货数量
    private int outNum = 0;  //销售数量


    public PetsStore(int len) {
        if (len > 0) {
            this.cats = new Cat[len]; // 开辟数组大小
            this.dogs = new Dog[len];
            this.pets = new Pets[len];
            this.vaccines = new vaccine[len];
            this.zhushes = new Zhushe[len];
        } else {
            this.dogs = new Dog[1]; // 至少开辟一个空间
            this.cats = new Cat[1];
            this.pets = new Pets[1];
            this.vaccines = new vaccine[1];
            this.zhushes = new Zhushe[1];
        }
    }
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
    public void add() { // 添加的是一个宠物
        System.out.println("您添加的是？\n" + "1.狗          2.猫");
        int choice = input.nextInt();
        if(choice == 1) {
            Dog dog = new Dog();

            System.out.println("请输入您要添加的宠物的信息");
            System.out.print("颜色：");
            dog.setColor(input.next());
            System.out.print("年龄：");
            dog.setAge(input.nextInt());
            System.out.print("性别：");
            dog.setSex(input.next());
            System.out.print("三种疫苗注射状况(1：已注射，0：未注射：");
            dog.vaccine=new vaccine(input.nextInt(),input.nextInt(),input.nextInt());
            System.out.print("进货价格：");
            dog.setInPrice(input.nextDouble());
            System.out.print("出售价格：");
            dog.setOutPrice(input.nextDouble());
            dog.setState("出售");

            if(dogFoot < dogs.length) {
                dogs[dogFoot] = dog;
                dogFoot++;
                System.out.println("添加成功！");
                inNum++;
                num++;
            }
        }
        else if(choice == 2) {
            if (catFoot < cats.length) {
                Cat cat = new Cat();

                System.out.println("请输入您要添加的宠物的信息");
                System.out.print("颜色：");
                cat.setColor(input.next());
                System.out.print("年龄：");
                cat.setAge(input.nextInt());
                System.out.print("性别：");
                cat.setSex(input.next());
                System.out.print("三种疫苗注射状况(1：已注射，0：未注射：");
                cat.vaccine=new vaccine(input.nextInt(),input.nextInt(),input.nextInt());
                System.out.print("进货价格：");
                cat.setInPrice(input.nextDouble());
                System.out.print("出售价格：");
                cat.setOutPrice(input.nextDouble());
                cat.setState("出售");


                cats[catFoot] = cat;
                catFoot++;
                System.out.println("添加成功！");
                inNum++;
                num++;
            }
        }

        else {
            System.out.println("没有这个选项，请重新输入!");
        }
    }


    public void print() {
        Date date = new Date();
        System.out.println("==============================================宠物商店库存清单==============================================");
        System.out.println("\n************************************************C A T S************************************************");
        for (int i = 0; i < cats.length; i++) {
            if (cats[i] != null) {
                System.out.println(cats[i].toString());
            }
        }
        System.out.println("\n************************************************D O G S************************************************");
        for (int i = 0; i < dogs.length; i++) {
            if (dogs[i] != null) {
                System.out.println(dogs[i].toString());
            }
        }

        System.out.println("=======================================================================================================");
        System.out.println("date:      " + date);
    }

    public void adoption(){
        System.out.println("请输入您要寄养的宠物：1.狗  2.猫");
        String d =input.next();
        if(d.equals("1")){
            Dog dog =new Dog();
            System.out.println("请输入您要寄养的狗的特征");
            System.out.print("颜色：");
            dog.setColor(input.next());
            System.out.print("年龄：");
            dog.setAge(input.nextInt());
            System.out.print("性别：");
            dog.setSex(input.next());
            System.out.print("三种疫苗注射状况(1：已注射，0：未注射：");
            dog.vaccine=new vaccine(input.nextInt(),input.nextInt(),input.nextInt());
            dog.setState("寄养");
            dogs[dogFoot] = dog;
            dogFoot++;
            System.out.println("添加成功！");
            inNum++;
            num++;
        }
        else if(d.equals("2")){
        Cat cat = new Cat();
        System.out.println("请输入您要寄养的猫的特征");
            System.out.print("颜色：");
            cat.setColor(input.next());
            System.out.print("年龄：");
            cat.setAge(input.nextInt());
            System.out.print("性别：");
            cat.setSex(input.next());
            System.out.print("三种疫苗注射状况(1：已注射，0：未注射：");
            cat.vaccine=new vaccine(input.nextInt(),input.nextInt(),input.nextInt());
        cat.setState("寄养");
        cats[catFoot] = cat;
        catFoot++;
        System.out.println("添加成功！");
        inNum++;
        num++;
        }
        else
            System.out.println("输入错误.");
    }
    public void sell() {
        if(num == 0) {
            System.out.println("库存为零，请及时购进宠物和疫苗！\n");
        }
        else {
            System.out.println("您要出售的是？\n" + "1.猫              2.狗");
            String choice = input.next();
            if(choice.equals("2")) {
                System.out.println("请输入您要出售的猫的特征");
                System.out.print("颜色：");
                String color1 = input.next();
                System.out.print("年龄：");
                int age1 = input.nextInt();
                System.out.print("性别：");
                String sex1 = input.next();

                int i, flag = catFoot;
                for(i = 0; i < catFoot; i++) {
                    if(color1.equals(cats[i].getColor()) && age1 == cats[i].getAge() && sex1.equals(cats[i].getSex())) {
                        flag = i; break;
                    }
                }
                if(i == catFoot) {
                    System.out.println("查无此猫！请核对后重新输入 \n");
                    sell();
                }

                pets[petFoot] = cats[i];
                pets[petFoot].setKind("cat");
                petFoot++;
                for(int j = flag; j < catFoot; j++) {
                    cats[j] = cats[j + 1];
                }
                System.out.println("售出成功！\n");
                catFoot -= 1;  //不减1会报数组越界的错误
                outNum++;
                num--;

            }
            else if(choice.equals("1")) {
                System.out.println("请输入您要出售的狗的特征");
                System.out.print("颜色：");
                String color1 = input.next();
                System.out.print("年龄：");
                int age1 = input.nextInt();
                System.out.print("性别：");
                String sex1 = input.next();

                int i, flag = dogFoot;
                for(i = 0; i < dogFoot; i++) {
                    if(color1.equals(dogs[i].getColor()) && age1 == dogs[i].getAge() && sex1.equals(dogs[i].getSex())) {
                        flag = i; break;
                    }
                }
                if(i == dogFoot) {
                    System.out.println("查无此狗！请核对后重新输入 ");
                    sell();
                }
                else {
                    pets[petFoot] = dogs[i];
                    pets[petFoot].setKind("dog");
                    petFoot++;
                    for(int j = flag; j < catFoot; j++) {
                        dogs[j] = dogs[j + 1];
                    }
                    System.out.println("售出成功！\n");
                    dogFoot -= 1;  //不减1会报数组越界的错误
                    outNum++;
                    num--;
                }
            }

            else {
                System.out.println("没有这个选项，请重新输入!");
            }
        }
    }
    public void zhushe(){
        Zhushe zhushe=new Zhushe();
        System.out.println("请输入要注射的疫苗:a  b  c");
        String a=input.next();
        int z=0;
        int x=0;
        int y=0;
        double z1=0;
        if(a.equals("a")){
            z++;
            z1+=100;
            zhushe.setAnum(z);
            zhushe.setMoney(z1);
        }
        else if(a.equals("b")){

            x++;
            z1+=200;
            zhushe.setBnum(x);
            zhushe.setMoney(z1);
        }
        else if(a.equals("c")){

            y++;
            z1+=300;
            zhushe.setCnum(y);
            zhushe.setMoney(z1);
        }
        else{
            System.out.println("输入错误,请重新输入");
            zhushe();
        }
        zhushes[zhusheFoot] = zhushe;
        zhusheFoot++;
        

    }

    public void note() {
        Date date = new Date();
        System.out.println("===============宠物商店销售记录清单===============");
        System.out.println("宠物销售记录");
        for(int i = 0; i < pets.length; i++) {
            if(pets[i] != null) {
                System.out.println(pets[i].toString());
            }
        }
        System.out.println("疫苗销售记录");
        for(int i = 0; i < zhushes.length; i++) {
            if(zhushes[i] != null) {
                System.out.println(zhushes[i].toString());
            }
        }
        System.out.println("=================================================");
        System.out.println("date:          " + date);
    }

    public void profitNote() {
        Date date = new Date();
        System.out.println("===========宠物商店盈利情况===========");
        double cost = 0.0;
        double income = 0.0;
        double myProfit = 0.0;
        for(int i = 0; i < pets.length; i++) {
            if(pets[i] != null) {
                cost += pets[i].getInPrice();
                income += pets[i].getOutPrice();
            }
        }
        myProfit = income - cost;
        System.out.println("成本：" + cost + "\n" + "总收入：" + income + "\n" + "利润：" + myProfit);
        if(myProfit > 0) {
            System.out.println("恭喜，您的店处于盈利状态！");
        }
        else {
            System.out.println("很遗憾，您的店处于亏损状况！");
        }
        System.out.println("=======================================");
        System.out.println("date:      " + date);
    }
}
class Zhushe{
    private int anum;
    private int bnum;
    private int cnum;
    private double money;

    public Zhushe() {
    }

    @Override
    public String toString() {
        return 
                "anum=" + anum +
                ", bnum=" + bnum +
                ", cnum=" + cnum +
                ", earn=" + money ;
    }

    public int getAnum() {
        return anum;
    }

    public void setAnum(int anum) {
        this.anum = anum;
    }

    public int getBnum() {
        return bnum;
    }

    public void setBnum(int bnum) {
        this.bnum = bnum;
    }

    public int getCnum() {
        return cnum;
    }

    public void setCnum(int cnum) {
        this.cnum = cnum;
    }

    public double getMoney() {
        return money;
    }

    public void setMoney(double money) {
        this.money = money;
    }
}
class vaccine {
    
    private int a;//用int记录店内动物是否接种相应疫苗
    private int b;
    private int c;
    public vaccine() {

    }
    public vaccine(int a, int b, int c) {
        this.a = a;
        this.b = b;
        this.c = c;
    }

    public int getA() {
        return a;
    }

    public void setA(int a) {
        this.a = a;
    }

    public int getB() {
        return b;
    }

    public void setB(int b) {
        this.b= b;
    }

    public int getC() {
        return c;
    }

    public void setC(int c) {
        this.c = c;
    }
    @Override
    public String toString() {
        return "vaccine{" +
                "a=" + a +
                ", b=" + b +
                ", c=" + c +
                '}';
    }


    
}

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        PetsStore store = new PetsStore(100);

        System.out.print("请为您的宠物商店取个名字：");
        store.setName(input.nextLine());
        System.out.println("您好！" + store.getName() + "的店长，欢迎使用宠物商店管理系统！");

        String choice = "1";

        while (!choice.equals("0") ) {
            System.out.println("==========宠物商店管理系统==========");
            System.out.println("1.查看库存\n" + "2.添加库存\n"  + "3.出售宠物\n" + "4.查看盈利\n" + "5.销售记录\n"+ "6.寄养宠物\n" + "7.注射疫苗\n" + "0.退出程序");
            System.out.println("===================================");
            System.out.print("请输入你的选择：");
            choice = input.next();

            switch (choice) {
                case "1":
                    store.print();
                    System.out.println("请问您还需要什么服务？");
                    break;

                case "2":
                    String choice1 = "1";
                    do {
                        store.add();
                        System.out.println("是否继续添加？\n" + "1.是             2.否");
                        choice1 = input.next();
                    } while (choice1.equals("1"));
                    System.out.println("请问您还需要什么服务？");
                    break;

                case "3":
                    String choice2 = "1";
                    do {
                        store.sell();
                        System.out.println("是否继续出售？\n" + "1.是             2.否");
                        choice2 = input.next();
                    } while (choice2.equals("1"));
                    System.out.println("请问您还需要什么服务？");
                    break;

                case "4":
                    store.profitNote();
                    System.out.println("请问您还需要什么服务？");
                    break;

                case "5":
                    store.note();
                    System.out.println("请问您还需要什么服务？");
                    break;

                case "6":
                    store.adoption();
                    System.out.println("请问您还需要什么服务？");
                    break;
                    
                case  "7":
                    store.zhushe();
                    System.out.println("请问您还需要什么服务？");
                    break;

                case "0":
                    System.out.println("谢谢您的使用，欢迎下次再来！\n" + "**********按任意键结束程序**********");
                    break;

                default:
                    System.out.println("错误输入， 请重新输入！");
                    break;
            }

        }
    }
}

